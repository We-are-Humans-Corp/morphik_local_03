x-ollama-check: &ollama-check
  # This command reads the toml file and checks if any provider is set to "ollama"
  command: >
    /bin/sh -c '
    grep -q "provider *= *\"ollama\"" morphik.toml &&
    echo "true" > /tmp/needs_ollama ||
    echo "false" > /tmp/needs_ollama'

services:
  config-check:
    image: alpine
    volumes:
      - ./morphik.toml:/morphik.toml
    <<: *ollama-check

  morphik:
    build: .
    ports:
      - "8000:8000"
    entrypoint: ["/bin/sh", "-c", "exec uv run uvicorn core.api:app --host 0.0.0.0 --port 8000 --reload"]
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-here}
      - POSTGRES_URI=postgresql+asyncpg://morphik:morphik@135.181.106.12:5432/morphik
      - PGPASSWORD=morphik
      - HOST=0.0.0.0
      - PORT=8000
      - LOG_LEVEL=DEBUG
      - REDIS_HOST=135.181.106.12
      - REDIS_PORT=6379
      - OLLAMA_BASE_URL=http://135.181.106.12:11434
      - RUNPOD_API_KEY=${RUNPOD_API_KEY}
    volumes:
      - ./core:/app/core
      - ./storage:/app/storage
      - ./logs:/app/logs
      - ./morphik.toml:/app/morphik.toml
      - huggingface_cache:/root/.cache/huggingface
    depends_on:
      config-check:
        condition: service_completed_successfully
    networks:
      - morphik-network
    env_file:
      - .env

  worker:
    build:
      context: .
      dockerfile: dockerfile
    command: arq core.workers.ingestion_worker.WorkerSettings
    entrypoint: ["/app/docker-entrypoint-custom.sh"]
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-here}
      - POSTGRES_URI=postgresql+asyncpg://morphik:morphik@135.181.106.12:5432/morphik
      - PGPASSWORD=morphik
      - LOG_LEVEL=DEBUG
      - REDIS_HOST=135.181.106.12
      - REDIS_PORT=6379
      - REDIS_URL=redis://135.181.106.12:6379/0
      - OLLAMA_BASE_URL=http://135.181.106.12:11434
      - RUNPOD_API_KEY=${RUNPOD_API_KEY}
    volumes:
      - ./docker-entrypoint.sh:/app/docker-entrypoint-custom.sh
      - ./core:/app/core
      - ./storage:/app/storage
      - ./logs:/app/logs
      - ./morphik.toml:/app/morphik.toml
      - huggingface_cache:/root/.cache/huggingface
    depends_on:
      config-check:
        condition: service_completed_successfully
    networks:
      - morphik-network
    env_file:
      - .env

  ui:
    build:
      context: ./ee/ui-component
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - INTERNAL_API_URL=http://morphik:8000
      - NODE_ENV=production
    depends_on:
      - morphik
    networks:
      - morphik-network

networks:
  morphik-network:
    driver: bridge

volumes:
  huggingface_cache: